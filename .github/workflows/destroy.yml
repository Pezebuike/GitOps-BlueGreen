name: Destroy Infrastructure
run-name: Destroy ${{ inputs.module }} in ${{ inputs.environment }}

on:
  workflow_call:
    inputs:
      module:
        type: string
        description: 'Module to destroy'
        required: true
      environment:
        type: string
        description: 'Environment to destroy'
        required: true
        default: 'dev'
      resource_name:
        type: string
        description: 'Name of the resource'
        required: false
        default: ''
    secrets:
      AWS_REGION:
        required: true
      BUCKET_TF_STATE:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

permissions:
  contents: read
  id-token: write
   
env:
  TF_PLAN_FILE: ${{ github.sha }}.tfplan
  aws_region: ${{ secrets.AWS_REGION }}
  BUCKET_TF_STATE: ${{ secrets.BUCKET_TF_STATE }}
  aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  aws_secret_access_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

jobs:
  destroy-infrastructure:
    name: "Destroy ${{ inputs.module }}"
    runs-on: ubuntu-latest
    steps:
      # Common steps
      - name: Checkout Code
        uses: actions/checkout@v4
     
      - name: Set Up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.7
     
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ${{ env.aws_region }}
          aws-access-key-id: ${{ env.aws_access_key_id }}
          aws-secret-access-key: ${{ env.aws_secret_access_key }}
         
      # Create backend configuration
      - name: Create Backend Config
        run: |
          cat > backend.tf << EOF
          terraform {
            backend "s3" {
              bucket         = "$BUCKET_TF_STATE"
              key            = "${{ inputs.environment }}/${{ inputs.module }}/${{ inputs.resource_name }}.tfstate"
              region         = "$aws_region"
            }
          }
          EOF
        working-directory: modules/${{ inputs.module }}
     
      - name: Terraform Init
        run: terraform init
        working-directory: modules/${{ inputs.module }}
       
      # Plan and destroy
      - name: Terraform Plan (Destroy)
        run: terraform plan -destroy -out ${{ env.TF_PLAN_FILE }} -var-file="${{ inputs.environment }}.tfvars"
        working-directory: modules/${{ inputs.module }}
       
      - name: Terraform Apply (Destroy)
        run: terraform apply -auto-approve ${{ env.TF_PLAN_FILE }}
        working-directory: modules/${{ inputs.module }}

      # Create summary with information
      - name: Create Workflow Summary
        run: |
          echo "# Terraform Destroy Summary" >> $GITHUB_STEP_SUMMARY
          echo "## Destruction Details" >> $GITHUB_STEP_SUMMARY
          echo "- **Module**: ${{ inputs.module }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: ${{ inputs.environment }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Resource Name**: ${{ inputs.resource_name || 'default' }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Timestamp**: $(date)" >> $GITHUB_STEP_SUMMARY
          echo "- **Status**: Completed" >> $GITHUB_STEP_SUMMARY